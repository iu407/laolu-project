<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		xmlns:p="http://www.springframework.org/schema/p" 
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:jee="http://www.springframework.org/schema/jee" 
		xmlns:tx="http://www.springframework.org/schema/tx"
		xmlns:aop="http://www.springframework.org/schema/aop"
		
		xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd 
			http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
			http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd 
			http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd 
			http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd ">
	<!-- ========================= RESOURCE DEFINITIONS ========================= -->
	<context:property-placeholder location="classpath:jdbc.properties"/>

	<bean id="dataSource" 
			class="org.springframework.jdbc.datasource.DriverManagerDataSource"
			p:driverClassName="${jdbc.driverClassName}" 
			p:url="${jdbc.url}" 
			p:username="${jdbc.username}"
			p:password="${jdbc.password}">
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory" 
			class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean"
			p:dataSource-ref="dataSource">
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
				
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener"/>
				</entry>
			</map>
		</property>
<!--		<property name="annotatedClasses" >-->
<!--			<list><value>com.prs.jy.model.Users</value></list>-->
<!--		</property>-->
			<property name="packagesToScan" value="com/prs/jy/model/" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager"
			p:sessionFactory-ref="sessionFactory" >
	</bean>

    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="save*"   propagation="REQUIRED" />
            <tx:method name="add*"    propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="find*"   propagation="REQUIRED" />
            <tx:method name="*" read-only="true" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>
	
    <aop:config>
        <aop:pointcut id="allServiceMethod" expression="execution(* com.prs.jy.service.hibernate.*.*(..))" />
        <aop:advisor pointcut-ref="allServiceMethod" advice-ref="txAdvice" />
    </aop:config>
    
	<context:annotation-config />
	<aop:aspectj-autoproxy />
<!--	<context:component-scan base-package="cn.itownet.sh.wm.util"></context:component-scan>-->
<!--	<context:component-scan base-package="cn.itownet.sh.wm.aspect"></context:component-scan>-->
<!--	<context:component-scan base-package="cn.itownet.sh.wm.service"/>-->
	
	<!-- 自动查找bean -->

<!--	 openSessionInView定义在这里 -->
	<bean id="openSessionInView" class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor" 
		p:sessionFactory-ref="sessionFactory">
	</bean>


</beans>
